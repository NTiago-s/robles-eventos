---
import SectionContainer from "../../components/SectionContainer.astro";
import Layout from "../../layouts/Layout.astro";
import { events } from "../../utils/events";

const slugify = (str: string): string =>
  str
    .toLowerCase()
    .normalize("NFD")
    .replace(/[\u0300-\u036f]/g, "")
    .replace(/[^\w\s-]/g, "")
    .trim()
    .replace(/\s+/g, "-");

const groupedEvents = events.reduce(
  (acc, event) => {
    if (!acc[event.type]) acc[event.type] = [];
    acc[event.type].push(event);
    return acc;
  },
  {} as Record<string, typeof events>
);
---

<Layout>
  <SectionContainer id="galeria" class="py-24">
    <h2 class="text-3xl sm:text-4xl font-bold text-center mb-10">
      Galer√≠a de Eventos
    </h2>

    <input
      id="searchInput"
      type="text"
      placeholder="Buscar evento por nombre..."
      class="border px-4 py-2 w-full rounded mb-10"
    />

    <div id="eventsGrid" class="space-y-12">
      {
        Object.entries(groupedEvents).map(([type, events]) => (
          <section>
            <h3 class="text-2xl font-bold mb-6 underline">{type}</h3>
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6">
              {events.map((event) => (
                <div class="event-card" data-title={event.title.toLowerCase()}>
                  <a href={`/eventos/${slugify(event.title)}`}>
                    <img
                      src={event.image}
                      alt={event.title}
                      class="rounded-lg"
                    />
                    <h4 class="text-sm font-semibold mt-2">{event.title}</h4>
                  </a>
                </div>
              ))}
            </div>
          </section>
        ))
      }
    </div>

    <script>
      const input = document.getElementById(
        "searchInput"
      ) as HTMLInputElement | null;
      const cards = document.querySelectorAll(
        ".event-card"
      ) as NodeListOf<HTMLElement>;

      if (input) {
        input.addEventListener("input", (e) => {
          const query = (e.target as HTMLInputElement).value.toLowerCase();

          cards.forEach((card) => {
            const title = (card.dataset.title || "").toLowerCase();
            card.style.display = title.includes(query) ? "block" : "none";
          });

          const sections = document.querySelectorAll(
            "#eventsGrid > section"
          ) as NodeListOf<HTMLElement>;
          sections.forEach((section) => {
            const visibleCards = section.querySelectorAll(
              ".event-card:not([style*='display: none'])"
            );
            section.style.display = visibleCards.length ? "block" : "none";
          });
        });
      }
    </script>
  </SectionContainer>
</Layout>
